name: nx Dependency Update

on:
  workflow_call:
    inputs:
      pull_request_ref:
        required: true
        type: string

jobs:
  update-nx-dependencies:
    name: Update nx dependencies and apply migrations
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.pull_request_ref }}

      - name: Install canvas deps
        uses: ./.github/actions/install-canvas-deps

      - name: Setup git user
        uses: fregante/setup-git-user@v2

      - name: Fetch dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version-file: package.json

      - name: Install Dependencies
        run: pnpm install

      - name: Retrieve target versions
        id: target-versions
        run: |
          set -e
          new_version=$(echo '${{ steps.dependabot-metadata.outputs.updated-dependencies-json }}' | jq --raw-output --exit-status '.[] | select(.dependencyName == "nx") | .newVersion')
          prev_version=$(echo '${{ steps.dependabot-metadata.outputs.updated-dependencies-json }}' | jq --raw-output --exit-status '.[] | select(.dependencyName == "nx") | .prevVersion')
          echo "new_version=${new_version}" >> "$GITHUB_OUTPUT"
          echo "prev_version=${prev_version}" >> "$GITHUB_OUTPUT"

      - name: Migrate nx
        run: |
          pnpm exec nx migrate ${{ steps.target-versions.outputs.new_version }} \
            --from nx@${{ steps.target-versions.outputs.prev_version }}

      - name: Install updated depenencies
        run: pnpm install --no-frozen-lockfile

      - name: Commit changes to package(-lock).json
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: 'chore: bump nx dependencies to ${{ steps.target-versions.outputs.new_version }}'
          commit_options: '--signoff'
          file_pattern: 'package.json pnpm-lock.yaml'
          push_options: --dry-run
          skip_fetch: true
          skip_checkout: true

      - name: Execute migrations
        run: pnpm exec nx migrate --run-migrations --if-exists --create-commits
        env:
          npm_config_legacy_peer_deps: false

      - name: Push changes
        run: git push origin HEAD:${{ inputs.pull_request_ref }}
